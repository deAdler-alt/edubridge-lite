import jsPDF from 'jspdf'

export function exportPackToPdf(pack, meta = {}) {
  const { title = 'EduBridge Lite Pack', lang = 'en' } = meta
  const doc = new jsPDF({ unit: 'pt', format: 'a4' })
  const margin = 36
  const lineHeight = 16
  const pageWidth = doc.internal.pageSize.getWidth()
  const pageHeight = doc.internal.pageSize.getHeight()
  let y = margin

  function addHeading(text, size = 16) {
    if (y + size + 8 > pageHeight - margin) { doc.addPage(); y = margin }
    doc.setFont('helvetica', 'bold'); doc.setFontSize(size)
    doc.text(text, margin, y); y += size + 8
  }
  function addPara(text, size = 11) {
    doc.setFont('helvetica', 'normal'); doc.setFontSize(size)
    const lines = doc.splitTextToSize(text, pageWidth - margin * 2)
    lines.forEach(line => {
      if (y + lineHeight > pageHeight - margin) { doc.addPage(); y = margin }
      doc.text(line, margin, y); y += lineHeight
    })
    y += 6
  }
  function addBullets(items) {
    doc.setFont('helvetica', 'normal'); doc.setFontSize(11)
    items.forEach(item => {
      const lines = doc.splitTextToSize('• ' + item, pageWidth - margin * 2)
      lines.forEach(line => {
        if (y + lineHeight > pageHeight - margin) { doc.addPage(); y = margin }
        doc.text(line, margin, y); y += lineHeight
      })
    })
    y += 6
  }

  // Title
  addHeading(title, 20)
  doc.setFontSize(10); doc.setTextColor('#666')
  doc.text(`Language: ${lang.toUpperCase()}  •  Generated by EduBridge Lite`, margin, y)
  doc.setTextColor('#000'); y += 18

  // Sections
  addHeading('Summary')
  addBullets(pack.summary || [])

  addHeading(lang === 'pl' ? 'Wersja łatwiejsza' : 'Easy Language')
  addPara(pack.easy || '')

  addHeading('Flashcards')
  ;(pack.flashcards || []).forEach((f, i) => addPara(`${i + 1}. Q: ${f.q}  —  A: ${f.a}`))

  addHeading('Quiz')
  ;(pack.quiz || []).forEach((q, i) => addPara(`${i + 1}. ${q.q} (A/B/C/D)`))

  // Save
  doc.save('edubridge-lite-pack.pdf')
}

